{ LAST
T MOV AX, LAST
NT FPUSH AX }

{ STRCMP
T FPOP CX
NT FPOP BX
NT ADD CX, 2
NT ADD BX, 2

N STARTCMP:
NT MOV SI, CX
NT LODSB
NT MOV CX, SI
NT MOV DL, AL
NT MOV SI, BX
NT LODSB
NT MOV BX, SI
NT CMP AL, DL
NT JNZ NOTCMP
NT OR AL, AL
NT JZ ISCMP
NT JMP STARTCMP

N NOTCMP:
NT FPUSH 0
NT NEXT

N ISCMP:
NT FPUSH 1 }

{ FIND
T FPOP BX
NT SUB BX, 2
NT FPUSH BX
NT MOV AX, [LAST]

N STARTFIND:
NT MOV [NEXTSAVE], AX
NT FPUSH AX
NT FWORD SWAP
NT FWORD DUP
NT FWORD ROT
NT FWORD STRCMP
NT FPOP BX
NT OR BX, BX
NT JZ NEXTFIND
NT JMP FOUND

N NEXTFIND:
NT MOV AX, [NEXTSAVE]
NT MOV BX, AX
NT MOV AX, [BX]
NT OR AX, AX
NT JZ NOTFOUND
NT JMP STARTFIND

N FOUND:
NT FWORD DROP
NT MOV AX, [NEXTSAVE]
NT FPUSH AX
NT NEXT

N NOTFOUND:
NT FWORD DROP
NT MOV AX, 0
NT FPUSH AX
NT NEXT

N NEXTSAVE: dw 0 }

{ >CFA
T FPOP SI
NT LODSW
N CFASTART:
NT LODSB
NT OR AL, AL
NT JNZ CFASTART
NT FPUSH SI }

{ STRLEN
T FPOP SI
NT XOR BX, BX
NT MOV AL, byte [SI]
NT OR AL, AL
NT JZ ENDSTRLEN

N STRLENSTART:
NT LODSB
NT OR AL, AL
NT JZ ENDSTRLEN
NT INC BX
NT JMP STRLENSTART

N ENDSTRLEN:
NT FPUSH BX }

{ EXEC
T FPOP AX
NT MOV [CALLPLACE], AX
NT db 154
N CALLPLACE: dw 0
NT dw 0 }

{ PUSHVAL
T MOV AX, PUSHVAL
NT FPUSH AX }

: 1+! DUP @ 1 + SWAP ! ;
: 2+! DUP @ 2 + SWAP ! ;

: 1-! DUP @ 1 - SWAP ! ;
: 2-! DUP @ 2 - SWAP ! ;

: M> M ! &M 2+! ;
: >M &M 2-! M @ ;

: +! DUP @ SWAP M> + >M ;

: HERE! HERE ! &HERE 2+! ;
: HEREC! HERE C! &HERE 1+! ;

{ STATE
T MOV AX, STATEVAL
NT FPUSH AX
NT NEXT
N STATEVAL: dw 0 }

: [ 1 STATE ! ;
: ] 0 STATE ! ;
