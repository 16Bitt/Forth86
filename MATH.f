{ +
T FPOP AX
NT FPOP BX
NT ADD AX, BX
NT FPUSH AX }

{ -
T FPOP BX
NT FPOP AX
NT SUB AX, BX
NT FPUSH AX }

{ *
T FPOP AX
NT FPOP BX
NT IMUL AX, BX
NT FPUSH AX }

{ DUP
T FPOP AX
NT FPUSH AX
NT FPUSH AX }

{ 2DUP
T FPOP AX
NT FPOP BX
NT FPUSH BX
NT FPUSH AX
NT FPUSH BX
NT FPUSH AX }

{ SWAP
T FPOP AX
NT FPOP BX
NT FPUSH AX
NT FPUSH BX }

{ DROP
NT FPOP AX }

{ ROT
T FPOP AX
NT FPOP BX
NT FPOP CX
NT FPUSH AX
NT FPUSH BX
NT FPUSH CX }

{ LEFT-ROTATE
T FPOP AX
NT FPOP CX
NT ROL AX, CL
NT FPUSH AX }

{ RIGHT-ROTATE
T FPOP AX
NT FPOP CX
NT ROR AX, CL
NT FPUSH AX }

{ LEFT-SHIFT
T FPOP AX
NT FPOP CX
NT SHL AX, CL
NT FPUSH AX }

{ RIGHT-SHIFT
T FPOP AX
NT FPOP CX
NT SHR AX, CL
NT FPUSH AX }

{ <
T FPOP BX
NT FPOP AX
NT CMP AX, BX
NT JG GREATERTHAN
NT MOV AX, 1
NT FPUSH AX
NT NEXT

N GREATERTHAN:
NT XOR AX, AX
NT FPUSH AX }

{ >
T FPOP BX
NT FPOP AX
NT CMP AX, BX
NT JL LESSTHAN
NT MOV AX, 1
NT FPUSH AX
NT NEXT

N LESSTHAN:
NT XOR AX, AX
NT FPUSH AX
NT NEXT }
