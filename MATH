
lbl12:	FPOP AX 
	FPOP BX 
	ADD AX, BX 
	FPUSH AX 
	NEXT
lbl13:	FPOP BX 
	FPOP AX 
	SUB AX, BX 
	FPUSH AX 
	NEXT
lbl14:	FPOP AX 
	FPOP BX 
	IMUL AX, BX 
	FPUSH AX 
	NEXT
lbl15:	FPOP AX 
	FPUSH AX 
	FPUSH AX 
	NEXT
lbl16:	FPOP AX 
	FPOP BX 
	FPUSH BX 
	FPUSH AX 
	FPUSH BX 
	FPUSH AX 
	NEXT
lbl17:	FPOP AX 
	FPOP BX 
	FPUSH AX 
	FPUSH BX 
	NEXT
lbl18:
	FPOP AX 
	NEXT
lbl19:	FPOP AX 
	FPOP BX 
	FPOP CX 
	FPUSH AX 
	FPUSH BX 
	FPUSH CX 
	NEXT
lbl20:	FPOP AX 
	FPOP CX 
	ROL AX, CL 
	FPUSH AX 
	NEXT
lbl21:	FPOP AX 
	FPOP CX 
	ROR AX, CL 
	FPUSH AX 
	NEXT
lbl22:	FPOP AX 
	FPOP CX 
	SHL AX, CL 
	FPUSH AX 
	NEXT
lbl23:	FPOP AX 
	FPOP CX 
	SHR AX, CL 
	FPUSH AX 
	NEXT
lbl24:	FPOP BX 
	FPOP AX 
	CMP AX, BX 
	JG GREATERTHAN 
	MOV AX, 1 
	FPUSH AX 
	NEXT 
GREATERTHAN: 
	XOR AX, AX 
	FPUSH AX 
	NEXT
lbl25:	FPOP BX 
	FPOP AX 
	CMP AX, BX 
	JL LESSTHAN 
	MOV AX, 1 
	FPUSH AX 
	NEXT 
LESSTHAN: 
	XOR AX, AX 
	FPUSH AX 
	NEXT 
	NEXT

FLBL12:
	dw FLBL11
	db "+",0
	CALL 0:lbl12
	NEXT
FLBL13:
	dw FLBL12
	db "-",0
	CALL 0:lbl13
	NEXT
FLBL14:
	dw FLBL13
	db "*",0
	CALL 0:lbl14
	NEXT
FLBL15:
	dw FLBL14
	db "DUP",0
	CALL 0:lbl15
	NEXT
FLBL16:
	dw FLBL15
	db "2DUP",0
	CALL 0:lbl16
	NEXT
FLBL17:
	dw FLBL16
	db "SWAP",0
	CALL 0:lbl17
	NEXT
FLBL18:
	dw FLBL17
	db "DROP",0
	CALL 0:lbl18
	NEXT
FLBL19:
	dw FLBL18
	db "ROT",0
	CALL 0:lbl19
	NEXT
FLBL20:
	dw FLBL19
	db "LEFT-ROTATE",0
	CALL 0:lbl20
	NEXT
FLBL21:
	dw FLBL20
	db "RIGHT-ROTATE",0
	CALL 0:lbl21
	NEXT
FLBL22:
	dw FLBL21
	db "LEFT-SHIFT",0
	CALL 0:lbl22
	NEXT
FLBL23:
	dw FLBL22
	db "RIGHT-SHIFT",0
	CALL 0:lbl23
	NEXT
FLBL24:
	dw FLBL23
	db "<",0
	CALL 0:lbl24
	NEXT
FLBL25:
	dw FLBL24
	db ">",0
	CALL 0:lbl25
	NEXT
